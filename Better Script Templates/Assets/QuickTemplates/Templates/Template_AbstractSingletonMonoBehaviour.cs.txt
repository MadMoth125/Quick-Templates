using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

#ROOTNAMESPACEBEGIN#
[DefaultExecutionOrder(-1000)]
public abstract class #SCRIPTNAME#<T> : MonoBehaviour where T : MonoBehaviour
{
	private static T _instance;

	public static T Instance
	{
		get
		{
			if (_instance != null) return _instance;

			_instance = FindObjectOfType<T>();
			if (_instance != null) return _instance;

			_instance = new GameObject(typeof(T).Name).AddComponent<T>();
			return _instance;
		}
	}

	protected virtual void Awake()
	{
		if (_instance == null)
		{
			_instance = this as T;
		}
		else if (_instance != this)
		{
			Destroy(this);
		}
	}
}
#ROOTNAMESPACEEND#